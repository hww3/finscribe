  <%@include file="top.phtml"%>
   <title><%syspref var="site.name" %> :: <%LOCALE id="297" string="document tree"%></title>
  <%@include file="header.phtml"%>
<%@include file="pagebegin.phtml"%>
<div class="tundra flash-message"><%flash %></div>
          <h3><%LOCALE id="298" string="Site Index"%></h3>
[ <a href="/space/object-index">object-index</a> | <a 
href="/space/attachment-index">attachment-index</a> | <a 
href="/space/category-index">category-index</a> | 
document-tree ] 
<p>
	<ul dojoType="dijit.Menu" id="tree_menu" style="display: none;">
	    <li dojoType="dijit.MenuItem" onClick="edit_item(this);">
	        Edit...
	    </li>
	    <li dojoType="dijit.MenuItem" onClick="edit_item(this);">
			Delete...
	    </li>
	</ul>
	
	<div model="documentStore" openOnClick="false" jsId="doctree" id="doctree">
		<script type="dojo/connect" event="postCreate">
			object.set("model", documentStore);
		</script>

		<script type="dojo/connect" event="onDblClick">
	    	console.log("clicked on " + arguments[0].name + " from " + arguments[0].id);
		window.location = '<%action_url controller="/" action="space"%>/' + arguments[0].id;
		</script>

		<script type="dojo/connect">
		var menu = dijit.byId("tree_menu");
		var tree = dijit.byId('doctree');
		// when we right-click anywhere on the tree, make sure we open the menu
		menu.bindDomNode(tree.domNode);

		dojo.connect(menu, "_openMyself", this, function(e) {
		    // get a hold of, and log out, the tree node that was the source of this open event
		    var tn = dijit.getEnclosingWidget(e.target);
		    console.debug(tn);

		    // now inspect the data store item that backs the tree node:
		    console.debug(tn.item);
			tn.item;
		    // contrived condition: if this tree node doesn't have any children, disable all of the menu items
		    menu.getChildren().forEach(function(i) {
			    i.set('item', tn.item);
		        i.set('disabled', !tn.item.children);
		    });

		    // IMPLEMENT CUSTOM MENU BEHAVIOR HERE
		});

		</script>


	</div>
<%@include file="exec/_tree.phtml" %>
  <%@include file="footer.phtml"%>
  <%@include file="bottom.phtml"%>


<script type="text/javascript">
var documentStore;

dojo.addOnLoad(function(){
  startDocumentStore();
});


function edit_item(t)
{
	window.location = '<%action_url controller="/exec" action="edit"%>/' + t.item.id;
}

function delete_item(t)
{
	window.location = '<%action_url controller="/exec" action="delete"%>/' + t.item.id;
}

function startDocumentStore()
{
documentStore = new dojo.store.JsonRest({
	root: 0,
    target:"/rest/document/",
    mayHaveChildren: function(object){
        // see if it has a children property
        return (object.children && object.children != 0);
    },
    getChildren: function(object, onComplete, onError){
		if(!object.stub)
        {
//console.debug(object.children.slice(0,object.children.length-4));
	      onComplete(object.children);
		  return;
        }
        // retrieve the full copy of the object
        this.get(object.id).then(function(fullObject){
            // copy to the original object so it has the children array as well.
            object.children = fullObject.children;
            // now that full object, we should have an array of children
            onComplete(fullObject.children);
        }, onError);
    },
    getRoot: function(onItem, onError){
        // get the root object, we will do a get() and callback the result
        this.get("?parent=0").then(function(item){this.root = {id: "", "name": "Documents", "children": item}; onItem(this.root);}, onError);
    },
    getLabel: function(object){
        // just get the name
        return object.name;
    }
  });

  dojo.parser.instantiate([dojo.byId("doctree")], {dojoType: "dijit.Tree"});
}
</script>

