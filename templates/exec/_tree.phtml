<script type="text/javascript">
var tree;
var usGov;

function postOnLoad()
{
	alert("whee");
usGov = new dojo.store.JsonRest({
    target:"/rest/document/",
    mayHaveChildren: function(object){
        // see if it has a children property
        return "children" in object;
    },
    getChildren: function(object, onComplete, onError){
        // retrieve the full copy of the object
        this.get(object.id).then(function(fullObject){
            // copy to the original object so it has the children array as well.
            object.children = fullObject.children;
            // now that full object, we should have an array of children
            onComplete(fullObject.children);
        }, onError);
    },
    getRoot: function(onItem, onError){
        // get the root object, we will do a get() and callback the result
        this.get("space").then(onItem, onError);
    },
    getLabel: function(object){
        // just get the name
        return object.title;
    }
});

tree = new dijit.Tree({ // create a tree
        model: usGov // give it the model
    }, "tree"); // target HTML element's id
tree.startup();
}
</script>

<%list_store var="jsfooter" val="dojo.ready(function(){initialize();})"%>

<div id="tree">
	</div>
<xdiv xdojoType="dojo.store.JsonRest" jsId="documentStore" target="/rest/document/" labelAttribute='title' idProperty='path'>
</div>
<xdiv xdojoType="dijit.tree.ForestStoreModel" jsId="documentModel" store="documentStore"
query="{'parent': 0}" rootId="documentRoot" rootLabel="Documents" deferItemLoadingUntilExpand="true"
childrenAttrs="children">
</div>
<div xdojoType="dijit.Tree" id="mytree" model="usGov" openOnClick="true">
    <script type="dojo/method" event="onClick" args="item">
        alert("Execute of node " + documentStore.getLabel(item) + ", path=" + docmentStore.getValue(item, "path"));
    </script>
</div>

