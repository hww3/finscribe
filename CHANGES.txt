Version 0.7

- Added deferred posting of blog articles. Deferred posts have a special 
    ACL. Upon publication, the article's will have the appropriate ACL 
    set.
- Requires newest Public.Web.Wiki due to Macro compatibility and argument
    handling changes.
- Super reloads (ie sending Pragma: no-cache) forces rendering of wiki and
    other parsed markup.
- fix overzealous caching of weblog entries when displaying a partial view.
- errors (500, 404, etc) are now themeable. see templates/error directory.
- added basic edit-in-place for preferences.
- new stylesheet for rss feeds
- tuned the wiki content caching strategy to provide more up-to-date content
    without having to reload.
- surrounded weblog paging control with a div for better stylability.
- changed link icon to a style for better themability.
- added some standard feed icons to the distribution.
- added teaser support for weblog entries. requires a theme that takes advantage
    of the teaser. added a {break} macro to signify the end of the teaser in
     a weblog entry.
- added support for Atom 1.0 feeds provided that Public.Web.ATOM is installed.
- added support for html documents to call macros loaded via plugin. currently
    this support is a little rickety: no caching, and we really need to rethink
    the way macro parameters are written, parsed and passed.
- we return a unique url from login, so that we don't have to worry about 
    getting cached page from before the login.
- new tabbed html editing widget that allows you to modify the source 
    directly by clicking on the "source" tab.
- updated to Dojo 0.3.1. some things are still a little hinky.
- make finscribe more friendly when we don't have some of the optional
    modules (Public.Parser.XML2 and Public.Web.RSS) installed.

Version 0.6
- added initial attempt at a "gravatar" macro (see gravatar.com)
- A user with delete permission on an object can change the ACL of that 
    object.
- New objects get the ACL of the nearest parent object
- Added attachment list with icons to the default display page
- Added some more common datatypes
- Attachments no longer require the mimetype to be provided when adding.
- Added ACL editing and creation capability
- Changed permissions system to use ACLs instead: we currently respect the 
    following permissions: read, version, write(create) delete, post and lock. 
    More on the way.
- Added ability to attach an ACL to an object at the data model level
   (currently only the default ACL will be attached at object creation).
- Made some changes to provide a default stylesheet, plus a stylesheet for
    theme specific styles.
- Fixed a bug that prevented installation when specifying an admin user whose
    name wasn't "admin".
- Made full text indexing occur within a separate thread to keep saves from 
    failing or taking too long.
- Added code to auto AJAXify the application. To disable AJAX effects, simply
    comment out the dojo.js script from header.phtml.
- Added BackLinks with automatic backlink index generator
- Fixed a template bug that could cause the main portlet to appear twice.
- Fixed some minor bugs that were messing up path determination on the 
  "new object" page
- Fixed a bug that prevented objects from being saved because of a 
  concatenation of the datatype for the object.
- rewrote recent changes macro to avoid database dependencies
- removed explicit formatting from many of the output macros
- trackback pinging occurs in a separate thread, which should eliminate hangs
    when pinging our own server.
- rewrote recent changes macro.
- fixed recent changes macro to not fail when a recently changed object is 
    deleted or otherwise unavailable.
- added content compression for clients that support it
- many miscellaneous installer fixes
- most all view (theme) and controller (action) code can be reloaded upon change
    for speedier development. this can be turned off in the configuration file.

Version 0.5
- Added theme support
- Added album macro that will display thumbnail images of any attachments, 
  and displays them in a "lightbox".
- Reorganized templates in preparation for theme support
- Added preference list to admin interface
- Moved pingback to a plugin; runs asyncronously new to cut posting time
- Fixed bug that prevented proper saving of mime type of new objects
- Fixed bug that subpages from being created properly
- Deleting objects will return you to a more reasonable page
- Commenting and posting should be more reliable
- Fixed bug that didn't generate subsequent post ids for posts made during 
  the same day.
- Increased content size to 1MB, which should reduce the occurrence of clipped
  off attachments.
- A user's preferred content type will be used to create new objects, if one
  is not otherwise specified. The default type is text/wiki.
- Fixed login bounce-back page when using ajax login. You should get bounced
  back to the page you were at when you clicked "login".
- Content should be more cachable (looking for feedback on this).
- Plugins can have static content now (see album plugin for example).
- Other minor fixes to date displays, warnings and the installer.

Version 0.4
- We now assume that the datatype of a new object that's not been saved 
  (such as an initial preview) is of type "text/wiki", unless it's 
  otherwise supplied in the datatype form variable.
- added ability to choose type for a new object, with type-specific editing
  widgets (dynamically selected based on datatype). 
  html content gets a wysiwyg editor.
- added anonymous posting, with some rudimentary spam control using a
  "type the text in the image" technique.
- added the ability for a document owner to disable (or re-enable) commenting
  on that document.
- we should be able to store binary data in non-mysql databases now. 
  Tested on SQLite, not tested on Postgresql.
- added move functionality. does not check for orphaned content.
- added plugin list and plugin enable "toggler".
- added ability to modify the user membership of a group.
- added a per user preference for default content type (ie wiki vs html),
  "[username].new.default_mimetype".
- added the ability to page through a set of weblog entries
- added pingback sending for for new and updated objects.
- added pingback receiving.
- added configuration option "blog.weblog_ping_urls" that can be used to 
  specify a list of weblog ping urls, such as Technorati.
- added link element to rss feed for weblog pages.
- added category element to items in weblog rss feed, and category
  to channel rss feed for page history and page comments.
- added options to allow easier location of newly created documents.
- added subpage-output macro.

Version 0.3
- made view tracking optional, via a configuration setting.
- added lock to templates (not sure why it was missing)
- static items and non-wiki content are now cache-friendly, which should 
  speed response time
- switched to new version of wiki renderer; should increase rendering times
  by up to 10x for pages that don't use a lot of dynamic macros.
- removed reference to non-existent css file
- fixes for numerous template format bugs
- added hooks for permission checks to objects. this should result in 
  more consistent application behavior, and make it easier to add a full
  fledged permission layer.
- added Cancel button to post and edit functions.
- added Localization framework; localizations not included.
- cleaned up category template
- added /rss/categoryname?type=category feed of category items
- added category index macro and page /space/category-index
- added pike code hilighting to code macro
- beginning of localization, starting with strings contained in internal code
- added groups to data model
- added acls to data model
- added publish date to blog post screen
- added "nohilight" option to code macro
- added some ui refinements thanks to Dojo (www.dojotoolkit.org)
- blog posting allows publication date to be selected
- beginning of a plugin architecture (a lot of support infrastructure, 
  such as preferences and the ability to disable plugins, does not exist 
  just yet.) 
- renderer macros (not template macros) are pluggable now.
- renderers (such as for the wiki markup) are pluggable now.
- added beginnings of a fulltext search
- smoothed out some issues with dynamic weblog content and caching
- added beginnings of a preferences system
- added web based installer gui

Version 0.2

- added view tracking on objects
- weblog entry formatting is now controlled by a template, allowing
  end users to customize the look of their weblogs
- updated to latest fins source, including new templates

Version 0.1

- added lock object functionality (only a document's owner may edit a 
  locked document)
- added new object functionality
- added visual diff
- added viewing of previous versions
- added TrackBack pinging support with automatic detection of TrackBack 
    URLs
- added TrackBack receive support, with automatic embedding of TrackBack
    URLs in displayed documents
- RSS 2.0 feeds for comments and version history (in addition to the 
    existing feeds for weblog posts)
- Added full and partial weblog display
- Added RSS Feed links for Weblogs, Versions and Comments
- added pings for Weblogs.com on weblog post
